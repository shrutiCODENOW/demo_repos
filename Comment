import React, { useState, useEffect } from 'react';
import axios from 'axios';

const TaskDetail = ({ taskId }) => {
  const [task, setTask] = useState(null);  // Store task details
  const [newComment, setNewComment] = useState('');  // Store new comment input
  const [comments, setComments] = useState([]);  // Store task comments
  const [error, setError] = useState('');  // Store error message
  const username = localStorage.getItem('username');
  const password = localStorage.getItem('password');

  useEffect(() => {
    // Fetch task details and comments
    const fetchTaskDetails = async () => {
      try {
        const response = await axios.get(`http://127.0.0.1:8000/api/tasks/${taskId}/`, {
          auth: { username, password },
        });
        setTask(response.data);
        setComments(response.data.comments);  // Assuming task includes 'comments' field
      } catch (err) {
        setError('Error fetching task details.');
        console.error(err);
      }
    };

    fetchTaskDetails();
  }, [taskId, username, password]);

  // Handle comment submission
  const handleSubmitComment = async (e) => {
    e.preventDefault();

    if (!newComment) {
      alert('Please enter a comment.');
      return;
    }

    try {
      const response = await axios.post(
        `http://127.0.0.1:8000/api/add/comment/${taskId}/`,
        { comment: newComment }, // Send comment content in the request body
        { auth: { username, password } }
      );

      if (response.status === 201) {
        setComments([...comments, response.data]);  // Add new comment to the list
        setNewComment('');  // Clear the input field
      }
    } catch (err) {
      alert('Error adding comment.');
      console.error(err);
    }
  };

  return (
    <div style={{ padding: '20px' }}>
      {task ? (
        <>
          <h1>{task.title}</h1>
          <p>{task.description}</p>
          <h3>Comments:</h3>
          <ul>
            {comments.map((comment) => (
              <li key={comment.id}>
                <strong>{comment.user.username}</strong>: {comment.comment}
                <br />
                <small>{comment.timestamp}</small>
              </li>
            ))}
          </ul>

          <h3>Add a Comment:</h3>
          <form onSubmit={handleSubmitComment}>
            <textarea
              value={newComment}
              onChange={(e) => setNewComment(e.target.value)}
              placeholder="Add a comment"
              rows="4"
              cols="50"
              required
            />
            <br />
            <button type="submit">Submit Comment</button>
          </form>
        </>
      ) : (
        <p>{error || 'Loading task details...'}</p>
      )}
    </div>
  );
};

export default TaskDetail;
