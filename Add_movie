import axios from 'axios';

// Replace 'YOUR_OMDB_API_KEY' with your actual OMDb API key
const API_KEY = 'YOUR_OMDB_API_KEY'; 
const BASE_URL = 'https://www.omdbapi.com/';

// Fetch movies by search query and page
export const fetchMovies = async (query, page = 1) => {
  try {
    const response = await axios.get(`${BASE_URL}?s=${query}&page=${page}&apikey=${API_KEY}`);
    console.log('Movies fetched:', response.data); // Logs data to console
    return response.data; // Return the API response data
  } catch (error) {
    console.error('Error fetching movies:', error); // Logs errors
    throw error; // Propagates the error
  }
};

// Fetch detailed information about a movie by ID
export const fetchMovieDetails = async (id) => {
  try {
    const response = await axios.get(`${BASE_URL}?i=${id}&apikey=${API_KEY}`);
    console.log('Movie details:', response.data); // Logs data to console
    return response.data; // Return the API response data
  } catch (error) {
    console.error('Error fetching movie details:', error); // Logs errors
    throw error; // Propagates the error
  }
};

import axios from 'axios';

const API_KEY = '44df212';
const BASE_URL = 'https://www.omdbapi.com/';

// Function to fetch movies with IMDb ratings
export const fetchMovies = async (query, page = 1, genre = '') => {
  let url = `${BASE_URL}?s=${query}&page=${page}&apikey=${API_KEY}`;
  
  // Apply genre filter if provided
  if (genre && genre !== 'All') {
    url += `&genre=${genre}`;
  }

  // Fetch the initial search results
  const response = await axios.get(url);
  const data = response.data;

  // If no movies are found, return the response immediately
  if (!data.Search) {
    return data;
  }

  // Fetch full details for each movie to get IMDb ratings
  const moviesWithRatings = await Promise.all(
    data.Search.map(async (movie) => {
      const detailsResponse = await axios.get(`${BASE_URL}?i=${movie.imdbID}&apikey=${API_KEY}`);
      const detailsData = detailsResponse.data;
      // Add IMDb rating to the movie object
      return { ...movie, imdbRating: detailsData.imdbRating || '0.0' };
    })
  );

  // Return updated data with ratings
  return { ...data, Search: moviesWithRatings };
};

// Function to fetch detailed information about a specific movie
export const fetchMovieDetails = async (id) => {
  const response = await axios.get(`${BASE_URL}?i=${id}&apikey=${API_KEY}`);
  return response.data;
};


